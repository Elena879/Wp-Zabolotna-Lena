/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'Helvetica Neue';src:url("../helvetica-font/HelveticaNeue-Medium/HelveticaNeue-Medium.eot");src:url("../helvetica-font/HelveticaNeue-Medium/HelveticaNeue-Medium.eot?#iefix") format("embedded-opentype"),url("../helvetica-font/HelveticaNeue-Medium/HelveticaNeue-Medium.woff") format("woff"),url("../helvetica-font/HelveticaNeue-Medium/HelveticaNeue-Medium.ttf") format("truetype");font-style:normal;font-weight:500}@font-face{font-family:'Helvetica Neue';src:url("../helvetica-font/HelveticaNeue-Regular/HelveticaRegular.eot");src:url("../helvetica-font/HelveticaNeue-Regular/HelveticaRegular.eot?#iefix") format("embedded-opentype"),url("../helvetica-font/HelveticaNeue-Regular/HelveticaRegular.woff") format("woff"),url("../helvetica-font/HelveticaNeue-Regular/HelveticaRegular.ttf") format("truetype");font-style:normal;font-weight:400}*{box-sizing:border-box}img{width:100%;height:auto;vertical-align:middle}.get-notified-form{display:flex}.get-notified-form ::-webkit-input-placeholder{color:#848484;font:400 18px "Helvetica Neue",sans-serif}.get-notified-form :-ms-input-placeholder{color:#848484;font:400 18px "Helvetica Neue",sans-serif}.get-notified-form ::-moz-placeholder{color:#848484;font:400 18px "Helvetica Neue",sans-serif}.get-notified-form :-moz-placeholder{color:#848484;font:400 18px "Helvetica Neue",sans-serif}.get-notified-form input{width:100%;-webkit-appearance:none;-moz-appearance:none;appearance:none}.get-notified-form input:focus{outline:none}.get-notified-form .email{padding:22px 5px 20px 26px;max-width:305px;border:1px solid #c8c8c8;border-right:none;background-color:#fff;color:#848484;font:400 18px "Helvetica Neue",sans-serif;border-radius:10px 0 0 10px}.get-notified-form .submit{padding:19px 40px 20px 38px;max-width:140px;background-color:#2ecc71;color:#fff;font:700 22px "Raleway",sans-serif;border-radius:0 10px 10px 0;border:none}.get-notified-form .submit:hover{opacity:0.8;-webkit-transition:.2s;-moz-transition:.2s;-o-transition:.2s;transition:.2s}.container{max-width:1216px;width:100%;margin:0 auto;padding:0 20px}.site-header:before{content:'';display:block;background:#2ecc71;height:10px}.site-header .header-container{padding:167px 0 176px 0;max-width:1020px;margin:0 auto;position:relative;z-index:0}.site-header .header-container .hand-picture{position:absolute;right:0;bottom:0;max-width:433px;z-index:-1}.site-header .header-container .site-description{max-width:453px;color:#fff;font:500 24px/36px "Helvetica Neue",sans-serif;padding:0;margin:0;margin:36px 0 26px 0}.site-header .header-container .header-menu:after{content:'';clear:both;display:block}.site-header .header-container .header-menu li{margin-right:9px}.site-header .header-container .header-menu li a{background-color:#000;border-radius:50%;opacity:0.5;height:54px;width:54px;display:flex;align-items:center;justify-content:center;outline:none}.site-header .header-container .header-menu li a i{font:400 26px/1 "FontAwesome";color:#f4f4f4}.site-header .header-container .header-menu li a:hover{background-color:#2ecc71;opacity:1;-webkit-transition:.3s;-moz-transition:.3s;-o-transition:.3s;transition:.3s}.site-footer{padding:60px 0 54px 0;background-color:#e3e3e3}.site-footer .footer-menu{list-style:none;padding:0;margin:0;text-align:center}.site-footer .footer-menu li{display:inline-block;margin-right:20px}.site-footer .footer-menu li:last-child{margin-right:0}.site-footer .footer-menu li a{text-decoration:none;color:#848484;font:400 16px/26px "Helvetica Neue",sans-serif}.site-footer .footer-menu li a:hover{opacity:0.7;-webkit-transition:.2s;-moz-transition:.2s;-o-transition:.2s;transition:.2s}.features{padding:60px 0}.features .features-list{list-style:none;padding:0;margin:0;display:flex;justify-content:space-around}.features .features-list li{text-align:center}.features .features-list li .feature-icon{background-color:#2ecc71;border-radius:50%;height:98px;width:98px;margin:0 auto 30px auto;display:flex;align-items:center;justify-content:center}.features .features-list li .feature-icon i{color:#fff;font-size:48px}.features .features-list li a{text-decoration:none;color:#222;display:inline-block}.features .features-list li a:hover{opacity:0.7;transition:0.3s}.features .features-list li a h2{padding:0;margin:0;font:600 22px/1 "Raleway",sans-serif}.features .features-list li p{padding:0;margin:0;margin-top:30px;max-width:313px;color:#848484;font:400 16px/26px "Helvetica Neue",sans-serif}.get-notified{padding:60px 0;background-color:#e3e3e3}.get-notified-block{display:flex;justify-content:space-between}.get-notified-block .main-get-notified h2{margin:0;color:#222;font:600 22px/1 "Raleway",sans-serif}.get-notified-block .main-get-notified p{margin:25px 0 30px 0;color:#848484;font:400 16px/26px "Helvetica Neue",sans-serif;max-width:533px}.get-notified-block iframe{max-width:500px;width:100%;height:307px;border:none}.our-products{background-color:#e3e3e3}.product-item{max-width:580px}.product-item img{max-width:400px}.single-product li img{max-width:600px}.our-team .team-list-main{justify-content:center}.team-item{text-align:center;max-width:280px}.team-item img{max-width:150px}.item-list{padding:60px 0;display:flex;flex-wrap:wrap}.item-list .item{padding:0 40px}.item-list .item p{padding:0;margin:0;margin-top:30px;color:#222;font:400 16px/26px "Helvetica Neue",sans-serif}.item-list .item span{padding-left:10px;color:#222;font:600 14px/1 "Raleway",sans-serif}.item-list .item a{text-decoration:none;display:inline-block;color:#222}.item-list .item a:hover{opacity:0.7;transition:0.3s}.item-list .item a h3{padding:0;margin:0;font:600 22px/1 "Raleway",sans-serif}.single-item{padding:60px 0}.single-item img{max-width:250px}.single-item h2{margin:0;color:#222;font:600 22px/1 "Raleway",sans-serif}.single-item ul{list-style:none;padding:0;margin:0}.single-item ul li{margin-top:20px}.single-item ul li p{max-width:800px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
